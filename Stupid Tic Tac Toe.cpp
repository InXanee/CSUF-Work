#include <iostream>
#include <vector>
#include <string>
using namespace std;

//Constant Values 
int board[3][3];
void printBoard()
{
	//Prints out the board
	cout << "+-+-+-+" << endl;
	cout << "|" << board[0][0] << "|" << board[0][1] << "|" << board[0][2] << "|" << endl;
	cout << "+-+-+-+" << endl;
	cout << "|" << board[1][0] << "|" << board[1][1] << "|" << board[1][2] << "|" << endl;
	cout << "+-+-+-+" << endl;
	cout << "|" << board[2][0] << "|" << board[2][1] << "|" << board[2][2] << "|" << endl;
	cout << "+-+-+-+" << endl;
}

int main()
{
	const int ROW = 3;
	const int COL = 3;
	int A, B, C;
	cout << "Enter board state as 9 integers, 0-2 where 0=Empty,  1= X and 2= O :" << endl;
	//Takes in the current board
	for (int row = 0; row < ROW; row++)
	{
		for (int col = 0; col < COL; col++)
		{
			cin >> board[row][col];
		}
	}
	A = board[0][0];
	B = board[0][1];
	C = board[0][2];
	cout << "Current Board:" << endl;
	printBoard();

	//Checks For Winning Move For X
	if (board[0][0] == 0 && board[0][1] == 1 && board[0][2] == 1)
	{
		board[0][0] = 1;
		cout << "X moves to A To Win!" << endl;
	}
	if (board[0][0] == 1 && board[0][1] == 0 && board[0][2] == 1)
	{
		board[0][1] = 1;
		cout << "X moves to B To Win!" << endl;
	}
	if (board[0][0] == 1 && board[0][1] == 1 && board[0][2] == 0)
	{
		board[0][2] = 1;
		cout << "X moves to C To Win!" << endl;
	}
	if (board[0][0] == 0 && board[1][0] == 1 && board[2][0] == 1)
	{
		board[0][0] = 1;
		cout << "X moves to A To Win!" << endl;
	}
	if (board[0][1] == 0 && board[1][1] == 1 && board[2][1] == 1)
	{
		board[0][1] = 1;
		cout << "X moves to B To Win!" << endl;
	}
	if (board[0][2] == 0 && board[1][2] == 1 && board[2][2] == 1)
	{
		board[0][2] = 1;
		cout << "X moves to C To Win!" << endl;
	}

	//Blocks the O winning move
	if (board[0][0] == 2 && board[0][1] == 2 && board[0][2] == 0) {
		board[0][2] = 1;
		cout << "X moves to C to block." << endl;
	}

	if (board[0][0] == 0 && board[0][1] == 2 && board[0][2] == 2) {
		board[0][0] = 1;
		cout << "X moves to A to block." << endl;
	}

	if (board[0][0] == 2 && board[0][1] == 0 && board[0][2] == 2) {
		board[0][1] = 1;
		cout << "X moves to B to block." << endl;
	}

	if (board[0][0] == 0 && board[1][0] == 2 && board[2][0] == 2) {
		board[0][0] = 1;
		cout << "X moves to A to block." << endl;
	}

	if (board[0][1] == 0 && board[1][1] == 2 && board[2][1] == 2) {
		board[0][1] = 1;
		cout << "X moves to B to block." << endl;
	}

	if (board[0][2] == 0 && board[1][2] == 2 && board[2][2] == 2) {
		board[0][2] = 1;
		cout << "X moves to C to block." << endl;
	}

	if (board[0][0] == 0 && board[1][1] == 2 && board[2][2] == 2) {
		board[0][0] = 1;
		cout << "X moves to A to block." << endl;
	}

	if (board[0][2] == 0 && board[1][1] == 2 && board[2][0] == 2) {
		board[0][2] = 1;
		cout << "X moves to C to block." << endl;
	}
	// Puts the X in A,B,or C if neither work
	if (A == board[0][0] && B == board[0][1] && C == board[0][2]) {
		if (board[0][0] == 0)
		{
			board[0][0] = 1;
			cout << "X moves to A" << endl;
		}
		else if (board[0][1] == 0)
		{
			board[0][1] = 1;
			cout << "X moves to B" << endl;
		}
		else if (board[0][2] == 0)
		{
			board[0][2] = 1;
			cout << "X moves to C" << endl;
		}
	}
	//Prints out the new board, with the new values generated by AI
		cout << "New Board" << endl;
		printBoard();


		system("pause");
		return 0;
}

